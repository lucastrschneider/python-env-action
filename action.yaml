name: Python Virtual Environment

description: Creates a python virtual environment and runs a specified command in it

inputs:
  python-version:
    description: Python version to use on the environment
    required: true
    default: 3.11.3
  
  requirements:
    description: Name of the requirements file or string containing list of requirements, see PyPI documentation for more info
    required: true
  
  constraints:
    description: Name of the constraints file or string containing list of constraints, see PyPI documentation for more info
    required: true

  command:
    description: Command to be executed in the virtual environment
    required: true

runs:
  using: composite
  
  steps:
    - run: echo "${{ github.action_path }}" >> $GITHUB_PATH
      shell: bash

    - name: Find requirements
      run: |
        if [[ -f "${{ inputs.requirements }}" ]]; then
          echo "File ${{ inputs.requirements }} exists"
          
          echo "REQUIREMENTS_FILE=${{ inputs.requirements }}" >> $GITHUB_ENV
        else
          echo "Requirements file does not exist"

          REQUIREMENTS_FILE="${{ runner.temp }}/requirements_$RANDOM.txt"
          echo "REQUIREMENTS_FILE=${REQUIREMENTS_FILE}" >> $GITHUB_ENV

          file_from_string.sh "$REQUIREMENTS_FILE" "${{ inputs.requirements }}"
        fi
      shell: bash

    - name: Find constraints
      run: |
        if [[ -f "${{ inputs.constraints }}" ]]; then
          echo "File ${{ inputs.constraints }} exists"

          echo "CONSTRAINTS_FILE=${{ inputs.constraints }}" >> $GITHUB_ENV
        else
          echo "Constraints file does not exist"

          CONSTRAINTS_FILE="${{ runner.temp }}/constraints_$RANDOM.txt"
          echo "CONSTRAINTS_FILE=${CONSTRAINTS_FILE}" >> $GITHUB_ENV

          file_from_string.sh "$CONSTRAINTS_FILE" "${{ inputs.constraints }}"
        fi
      shell: bash

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}

    - name: Install Dependencies
      # Not sure if the upgrade pip is necessary, but it was done here: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
      run: |
        python -m pip install --upgrade pip 
        pip install -r "$REQUIREMENTS_FILE" -c "$CONSTRAINTS_FILE"
      shell: bash

    - name: Run command
      run: ${{ inputs.command }}
      shell: bash